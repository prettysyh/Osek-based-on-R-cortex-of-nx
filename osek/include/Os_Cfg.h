/*******************************************************************************************
* This file has been automatically generated by SmartSAR Configurator
* Smart OSEK v4.5.
*
* PLEASE DO NOT EDIT THIS FILE.
*
* Copyright 2009-2013 by Embedded System and Engineering Center of Zhejiang University (ESE)
* All rights exclusively reserved. Reproduction in whole or in part is    prohibited
* without the prior written consent of the copyright owner. The information presented in this
* document does not form part of any quotation or contract, is believed to be    accurate and
* reliable and may be changed without notice.    No liability will be accepted by the publisher
* for any consequence of its use. Publication thereof does not convey nor imply any license
* under patent or other industrial or intellectual property rights.
*******************************************************************************************/


#ifndef _OS_CFG_H
    #define _OS_CFG_H
   
    #include "Std_Types.h"
/*
 * macros used internally in os config file
 */
    
    #define OS_SCHEDULE_NON         0    
    #define OS_SCHEDULE_MIX         1
    #define OS_SCHEDULE_FULL        2
    #define OS_TASK_INVALID         0

    #define  OS_SC1_MODULE      1
    #define  OS_SC2_MODULE      2
    #define  OS_SC3_MODULE      3
    #define  OS_SC4_MODULE      4
    
/*
 * user configurations, standard in OSEK OS specification
 */     
    /* Task module */    
    #define OS_TASK_NUM             4 //chen add                     /* user defined task number */    
    #define OS_MAX_TASK_PRIO        8    /* the max defined top task priority value */        

    /* Event module */    
    #define OS_EVENT_MODULE         STD_ON        /* enable/disable event module */

    /* Alarm and counter module */
    #define OS_ALARM_MODULE         STD_ON        /* enable/disable alarm module */
    #define OS_ALARM_CALLBACK       STD_OFF        /* enable/disable alarm callback routine */
    #define OS_ALARM_NUM            1     /* user defined alarms' number */

    #define OS_COUNTER_NUM          1     /* user defined counters' number */

    /* Resource module */    
    #define OS_RESOURCE_MODULE      STD_ON        /* enable/disable resource module */
    #define OS_RES_SCHEDULER        STD_OFF        /* enable/disable scheduler as a resource */
    #define OS_RES_EXTERNAL         STD_ON        /* enable/disable external resources */
    #define OS_RES_NUM              1        /*user defined all resources' number including STANDARD, LINKED,and INTERNAL */
    #define OS_RES_EXTERNAL_NUM     1            /* user defined external resources' number including STANDARD and LINKED */
    #define OS_RES_INTERNAL_NUM     0
    #define OS_RES_INTERNAL         STD_OFF        /* enable/disable internal resources */
    #define OS_RES_INTERRUPT        STD_OFF        /* enable/disable interrupt resources */
    
    /* Interrupt module */    
    #define OS_INTERRUPT_MODULE     STD_ON        /* enable/disable isr module */
    #define OS_ISR_NUM               0        /* user defined isrs' number */


    /*scalability class*/
    #define   OS_SC_MODULE        OS_SC2_MODULE
    
    /*module enable*/
    #define OS_TIMING_PROTECTION_MODULE  STD_OFF 
    #define OS_COUNTER_INTERFACE_MODULE STD_OFF
    #define OS_SWFRT_INTERFACE_MODULE   STD_OFF
        #define OS_STACK_MONITORING_MODULE  STD_OFF
        #define OS_MEMORY_PROTECTION_MODULE        STD_OFF
        #define OS_SERVICE_PROTECTION_MODULE       STD_OFF
    #define OS_CALL_TRUSTED_FUNCTION_MODULE    STD_OFF
    #define OS_SCHEDULE_TABLE_MODULE              STD_OFF    
    #define OS_APPLICATION_MODULE              STD_OFF    
    /*schedule table module*/    
    #define OS_SCHEDULE_TABLE_NUM       0    
    #if (OS_SCHEDULE_TABLE_MODULE == STD_ON && OS_ALARM_MODULE == STD_OFF)
       #undef  OS_ALARM_MODULE
        #define OS_ALARM_MODULE         STD_ON        /* enable/disable alarm module ,schedule table g??????????'??alarmg??*/
    #endif
           
    /* OsApplication */
    #define OS_APPLICATION_NUM              0
    
    /* OS Extended Status */
    #define OS_EXTENDED_STATUS      STD_OFF



    /* Schedule policy */    
    #define OS_SCHEDULE_POLICY      OS_SCHEDULE_MIX        /* user defined OS's schedule policy */



/* Hook routine module */
    #define OS_HOOK_MODULE        STD_OFF
    #define OS_PROTECTION_HOOK        STD_OFF        /* enable/disable start-up hook routine */

    #define OS_STARTUP_HOOK         STD_OFF        /* enable/disable start-up hook routine */

    #define OS_SHUTDOWN_HOOK        STD_OFF        /* enable/disable shut-down hook routine */

    #define OS_ERROR_HOOK           STD_OFF        /* enable/disable error hook routine */
    #define OS_ERROR_GET_SERVICEID           STD_OFF        /* enable/disable error hook routine */
    #define OS_ERROR_PARAM_ACCESS           STD_OFF        /* enable/disable error hook routine */

    #define OS_PRE_TASK_HOOK           STD_OFF        /* enable/disable error hook routine */


    #define OS_POST_TASK_HOOK           STD_OFF        /* enable/disable error hook routine */



    /*
    * user configurations, non-standard in OSEK OS specification
    */
    #define OS_TICKS_PER_SEC            976    
    #define OS_TASK_IDLE_STK_SIZE       256    //chen add                /* user defined idle task's stack size */
    #define OS_STK_SYSTEM_SIZE            256 //chen add
    #define OS_STACK_INIT        STD_ON        /* enable task stack initial */
    #define STACK_PUSH_SIZE             27
    
#endif

